(define (set-eq? set1 set2)
  (and (every (lambda (x) (element-of-set? x set2)) set1)
       (every (lambda (x) (element-of-set? x set1)) set2)))

(assert (set-eq? '(1 2 3) '(1 2 3)))
(assert (set-eq? '(1 2 3) '(3 2 1)))
(assert (set-eq? '(1) '(1)))
(assert (set-eq? '() '()))
(assert (not (set-eq? '() '(1))))
(assert (not (set-eq? '(2) '(1))))
(assert (not (set-eq? '(2 1) '(1 2 3))))
(assert (not (set-eq? '(2 1 4) '(1 2 3))))
