(load "unordered-list-set")
(load "set-util")

(define (union-set set1 set2)
  (cond ((null? set1) set2)
        ((null? set2) set1)
        ((not (element-of-set? (car set1) set2))
         (cons (car set1)
               (union-set (cdr set1) set2)))
        (else (union-set (cdr set1) set2))))

(assert (set-eq? (union-set '(1 2 3) '()) '(1 2 3)))
(assert (set-eq? (union-set '() '(1 2 3)) '(1 2 3)))
(assert (set-eq? (union-set '(2) '(1 3)) '(1 2 3)))
(assert (set-eq? (union-set '(2 1) '(1 3)) '(1 2 3)))
