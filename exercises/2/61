(load "ordered-list-set")

(define (adjoin-set x set)
  (cond ((null? set) (list x))
        ((= x (car set)) set)
        ((< x (car set)) (cons x set))
        (else (cons (car set) (adjoin-set x (cdr set))))))

(assert (equal? '(1) (adjoin-set 1 '())))
(assert (equal? '(1 2) (adjoin-set 1 '(2))))
(assert (equal? '(1 2) (adjoin-set 2 '(1))))
(assert (equal? '(1 2 3) (adjoin-set 2 '(1 3))))
(assert (equal? '(1 3 5) (adjoin-set 5 '(1 3))))
