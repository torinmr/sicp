Recursive:

(define (f n)
  (cond ((< n 3) n)
        (else (+ (f (- n 1))
                 (* 2 (f (- n 2)))
                 (* 3 (f (- n 3)))))))

Iterative:

(define (g n)
  (define (g-iter a b c count)
    (if (= 0 count)
        c
        (g-iter b
                c
                (+ c (* 2 b) (* 3 a))
                (- count 1))))
  (cond ((< n 3) n)
        (else (g-iter 0 1 2 (- n 2)))))