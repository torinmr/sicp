(define (verbose-fixed-point f first-guess)
  (define (close-enough? v1 v2)
    (newline)
    (display v2)
    (< (abs (- v1 v2)) tolerance))
  (define (try guess)
    (let ((next (f guess)))
      (if (close-enough? guess next)
          next
          (try next))))
  (display first-guess)
  (try first-guess))

;; Without average damping
(verbose-fixed-point (lambda (x) (/ (log 10000) (log x))) 2.0)
28 iterations

;; With average damping
(verbose-fixed-point (lambda (x) (/ (+ x (/ (log 10000) (log x))) 2)) 2.0)
10 iterations
