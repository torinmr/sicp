;; Iterative version
(define (cont-frac n d k)
  (define (iter i result)
    (if (< i 1)
        result
        (iter (- i 1) (/ (n i) (+ (d i) result)))))
  (iter k 0.0))

(define (phi k)
  (/ 1.0 (cont-frac (lambda (i) 1.0)
                    (lambda (i) 1.0)
                    k)))

(phi 12) gives 12 digits of accuracy.

Interestingly, this generates exactly the same series of approximations as the
fixed point method from 1.35.

;; Recursive version:
(define (cont-frac n d k)
  (define (recurse i)
    (if (> i k)
        0.0
        (/ (n i) (+ (d i) (recurse (+ i 1))))))
  (recurse 1))
